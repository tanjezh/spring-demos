/*
 * This file is generated by jOOQ.
 */
package com.tan.jooq.mysql.dao.tables.pojos;


import java.io.Serializable;

import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserBO implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger id;
    private String name;
    private String pwd;
    private Byte isdeleted;
    private String created;
    private String updated;

    public UserBO() {}

    public UserBO(UserBO value) {
        this.id = value.id;
        this.name = value.name;
        this.pwd = value.pwd;
        this.isdeleted = value.isdeleted;
        this.created = value.created;
        this.updated = value.updated;
    }

    public UserBO(
        UInteger id,
        String name,
        String pwd,
        Byte isdeleted,
        String created,
        String updated
    ) {
        this.id = id;
        this.name = name;
        this.pwd = pwd;
        this.isdeleted = isdeleted;
        this.created = created;
        this.updated = updated;
    }

    /**
     * Getter for <code>test.user.id</code>.
     */
    public UInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>test.user.id</code>.
     */
    public void setId(UInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>test.user.name</code>. 用户名
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>test.user.name</code>. 用户名
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>test.user.pwd</code>. 密码
     */
    public String getPwd() {
        return this.pwd;
    }

    /**
     * Setter for <code>test.user.pwd</code>. 密码
     */
    public void setPwd(String pwd) {
        this.pwd = pwd;
    }

    /**
     * Getter for <code>test.user.isDeleted</code>.
     */
    public Byte getIsdeleted() {
        return this.isdeleted;
    }

    /**
     * Setter for <code>test.user.isDeleted</code>.
     */
    public void setIsdeleted(Byte isdeleted) {
        this.isdeleted = isdeleted;
    }

    /**
     * Getter for <code>test.user.created</code>.
     */
    public String getCreated() {
        return this.created;
    }

    /**
     * Setter for <code>test.user.created</code>.
     */
    public void setCreated(String created) {
        this.created = created;
    }

    /**
     * Getter for <code>test.user.updated</code>.
     */
    public String getUpdated() {
        return this.updated;
    }

    /**
     * Setter for <code>test.user.updated</code>.
     */
    public void setUpdated(String updated) {
        this.updated = updated;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserBO other = (UserBO) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.pwd == null) {
            if (other.pwd != null)
                return false;
        }
        else if (!this.pwd.equals(other.pwd))
            return false;
        if (this.isdeleted == null) {
            if (other.isdeleted != null)
                return false;
        }
        else if (!this.isdeleted.equals(other.isdeleted))
            return false;
        if (this.created == null) {
            if (other.created != null)
                return false;
        }
        else if (!this.created.equals(other.created))
            return false;
        if (this.updated == null) {
            if (other.updated != null)
                return false;
        }
        else if (!this.updated.equals(other.updated))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.pwd == null) ? 0 : this.pwd.hashCode());
        result = prime * result + ((this.isdeleted == null) ? 0 : this.isdeleted.hashCode());
        result = prime * result + ((this.created == null) ? 0 : this.created.hashCode());
        result = prime * result + ((this.updated == null) ? 0 : this.updated.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserBO (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(pwd);
        sb.append(", ").append(isdeleted);
        sb.append(", ").append(created);
        sb.append(", ").append(updated);

        sb.append(")");
        return sb.toString();
    }
}
