/*
 * This file is generated by jOOQ.
 */
package com.tan.jooq.mysql.dao.tables.pojos;


import org.jooq.types.UInteger;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MoneyBO implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger id;
    private String name;
    private Integer money;
    private Byte isDeleted;
    private LocalDateTime createAt;
    private LocalDateTime updateAt;

    public MoneyBO() {}

    public MoneyBO(MoneyBO value) {
        this.id = value.id;
        this.name = value.name;
        this.money = value.money;
        this.isDeleted = value.isDeleted;
        this.createAt = value.createAt;
        this.updateAt = value.updateAt;
    }

    public MoneyBO(
        UInteger id,
        String name,
        Integer money,
        Byte isDeleted,
        LocalDateTime createAt,
        LocalDateTime updateAt
    ) {
        this.id = id;
        this.name = name;
        this.money = money;
        this.isDeleted = isDeleted;
        this.createAt = createAt;
        this.updateAt = updateAt;
    }

    /**
     * Getter for <code>test.money.id</code>.
     */
    public UInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>test.money.id</code>.
     */
    public void setId(UInteger id) {
        this.id = id;
    }

    /**
     * Getter for <code>test.money.name</code>. 用户名
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>test.money.name</code>. 用户名
     */
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for <code>test.money.money</code>. 钱
     */
    public Integer getMoney() {
        return this.money;
    }

    /**
     * Setter for <code>test.money.money</code>. 钱
     */
    public void setMoney(Integer money) {
        this.money = money;
    }

    /**
     * Getter for <code>test.money.is_deleted</code>.
     */
    public Byte getIsDeleted() {
        return this.isDeleted;
    }

    /**
     * Setter for <code>test.money.is_deleted</code>.
     */
    public void setIsDeleted(Byte isDeleted) {
        this.isDeleted = isDeleted;
    }

    /**
     * Getter for <code>test.money.create_at</code>. 创建时间
     */
    public LocalDateTime getCreateAt() {
        return this.createAt;
    }

    /**
     * Setter for <code>test.money.create_at</code>. 创建时间
     */
    public void setCreateAt(LocalDateTime createAt) {
        this.createAt = createAt;
    }

    /**
     * Getter for <code>test.money.update_at</code>. 更新时间
     */
    public LocalDateTime getUpdateAt() {
        return this.updateAt;
    }

    /**
     * Setter for <code>test.money.update_at</code>. 更新时间
     */
    public void setUpdateAt(LocalDateTime updateAt) {
        this.updateAt = updateAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final MoneyBO other = (MoneyBO) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.money == null) {
            if (other.money != null)
                return false;
        }
        else if (!this.money.equals(other.money))
            return false;
        if (this.isDeleted == null) {
            if (other.isDeleted != null)
                return false;
        }
        else if (!this.isDeleted.equals(other.isDeleted))
            return false;
        if (this.createAt == null) {
            if (other.createAt != null)
                return false;
        }
        else if (!this.createAt.equals(other.createAt))
            return false;
        if (this.updateAt == null) {
            if (other.updateAt != null)
                return false;
        }
        else if (!this.updateAt.equals(other.updateAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.money == null) ? 0 : this.money.hashCode());
        result = prime * result + ((this.isDeleted == null) ? 0 : this.isDeleted.hashCode());
        result = prime * result + ((this.createAt == null) ? 0 : this.createAt.hashCode());
        result = prime * result + ((this.updateAt == null) ? 0 : this.updateAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("MoneyBO (");

        sb.append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(money);
        sb.append(", ").append(isDeleted);
        sb.append(", ").append(createAt);
        sb.append(", ").append(updateAt);

        sb.append(")");
        return sb.toString();
    }
}
