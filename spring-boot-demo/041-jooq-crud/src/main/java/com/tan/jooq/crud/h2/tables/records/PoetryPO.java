/*
 * This file is generated by jOOQ.
 */
package com.tan.jooq.crud.h2.tables.records;


import com.tan.jooq.crud.h2.tables.PoetryTB;
import com.tan.jooq.crud.h2.tables.pojos.PoetryBO;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

import java.sql.Timestamp;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class PoetryPO extends UpdatableRecordImpl<PoetryPO> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.POETRY.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.POETRY.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.POETRY.POET_ID</code>.
     */
    public void setPoetId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.POETRY.POET_ID</code>.
     */
    public Integer getPoetId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>PUBLIC.POETRY.TITLE</code>.
     */
    public void setTitle(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.POETRY.TITLE</code>.
     */
    public String getTitle() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.POETRY.CONTENT</code>.
     */
    public void setContent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.POETRY.CONTENT</code>.
     */
    public String getContent() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.POETRY.CREATE_AT</code>. 创建时间
     */
    public void setCreateAt(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.POETRY.CREATE_AT</code>. 创建时间
     */
    public Timestamp getCreateAt() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached PoetryPO
     */
    public PoetryPO() {
        super(PoetryTB.POETRY);
    }

    /**
     * Create a detached, initialised PoetryPO
     */
    public PoetryPO(Integer id, Integer poetId, String title, String content, Timestamp createAt) {
        super(PoetryTB.POETRY);

        setId(id);
        setPoetId(poetId);
        setTitle(title);
        setContent(content);
        setCreateAt(createAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised PoetryPO
     */
    public PoetryPO(PoetryBO value) {
        super(PoetryTB.POETRY);

        if (value != null) {
            setId(value.getId());
            setPoetId(value.getPoetId());
            setTitle(value.getTitle());
            setContent(value.getContent());
            setCreateAt(value.getCreateAt());
            resetChangedOnNotNull();
        }
    }
}
